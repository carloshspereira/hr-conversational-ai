name: Setup Terraform Backend

on:
  workflow_dispatch:

jobs:

  terraform-backend-s3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.0.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    
    - name: Terraform Init and Apply for ECR registry for ML image Terraform backend
      run: |
        cd infra/terraform-backend/ecr/s3
        export TF_VAR_component_name="ecr-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for IAM role Terraform backend
      run: |
        cd infra/terraform-backend/iam/s3
        export TF_VAR_component_name="iam-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    # - name: Terraform Init and Apply for S3 bucket Terraform backend
    #   run: |
    #     cd infra/terraform-backend/s3/s3
    #     export TF_VAR_component_name="s3-${{vars.BASE_NAME}}"
    #     export TF_VAR_region="${{vars.AWS_REGION}}"
    #     terraform init
    #     terraform apply -auto-approve

    - name: Terraform Init and Apply for ECS Terraform backend
      run: |
        cd infra/terraform-backend/ecs/s3
        export TF_VAR_component_name="ecs-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for VPC Terraform backend
      run: |
        cd infra/terraform-backend/vpc/s3
        export TF_VAR_component_name="vpc-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for lb Terraform backend
      run: |
        cd infra/terraform-backend/lb/s3
        export TF_VAR_component_name="lb-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve


  terraform-backend-dynamodb:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.0.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Terraform Init and Apply for ECR registry for ML image Terraform backend
      run: |
        cd infra/terraform-backend/ecr/dynamodb
        export TF_VAR_component_name="ecr-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for IAM role Terraform backend
      run: |
        cd infra/terraform-backend/iam/dynamodb
        export TF_VAR_component_name="iam-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    # - name: Terraform Init and Apply for S3 bucket Terraform backend
    #   run: |
    #     cd infra/terraform-backend/s3/dynamodb
    #     export TF_VAR_component_name="s3-${{vars.BASE_NAME}}"
    #     export TF_VAR_region="${{vars.AWS_REGION}}"
    #     terraform init
    #     terraform apply -auto-approve

    - name: Terraform Init and Apply for ECS Terraform backend
      run: |
        cd infra/terraform-backend/ecs/dynamodb
        export TF_VAR_component_name="ecs-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for VPC Terraform backend
      run: |
        cd infra/terraform-backend/vpc/dynamodb
        export TF_VAR_component_name="vpc-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve


    - name: Terraform Init and Apply for lb Terraform backend
      run: |
        cd infra/terraform-backend/lb/dynamodb
        export TF_VAR_component_name="lb-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve        

  terraform-backend-iam:
    runs-on: ubuntu-latest
    needs: [terraform-backend-s3, terraform-backend-dynamodb]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.0.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Terraform Init and Apply for ECR registry for ML image Terraform backend
      run: |
        cd infra/terraform-backend/ecr/iam
        export TF_VAR_account_id="${{vars.AWS_ID}}"
        export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
        export TF_VAR_component_name="ecr-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for IAM role Terraform backend
      run: |
        cd infra/terraform-backend/iam/iam
        export TF_VAR_account_id="${{vars.AWS_ID}}"
        export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
        export TF_VAR_component_name="iam-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    # - name: Terraform Init and Apply for S3 bucket Terraform backend
    #   run: |
    #     cd infra/terraform-backend/s3/iam
    #     export TF_VAR_account_id="${{vars.AWS_ID}}"
    #     export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
    #     export TF_VAR_component_name="s3-${{vars.BASE_NAME}}"
    #     export TF_VAR_region="${{vars.AWS_REGION}}"
    #     terraform init
    #     terraform apply -auto-approve

    - name: Terraform Init and Apply for ECS Terraform backend
      run: |
        cd infra/terraform-backend/ecs/iam
        export TF_VAR_account_id="${{vars.AWS_ID}}"
        export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
        export TF_VAR_component_name="ecs-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for VPC Terraform backend
      run: |
        cd infra/terraform-backend/vpc/iam
        export TF_VAR_account_id="${{vars.AWS_ID}}"
        export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
        export TF_VAR_component_name="vpc-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve

    - name: Terraform Init and Apply for lb Terraform backend
      run: |
        cd infra/terraform-backend/lb/iam
        export TF_VAR_account_id="${{vars.AWS_ID}}"
        export TF_VAR_user="${{vars.AWS_TERRAFORM_USER}}"
        export TF_VAR_component_name="lb-${{vars.BASE_NAME}}"
        export TF_VAR_region="${{vars.AWS_REGION}}"
        terraform init
        terraform apply -auto-approve
